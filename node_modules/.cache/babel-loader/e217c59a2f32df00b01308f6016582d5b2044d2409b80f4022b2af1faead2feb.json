{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin/Desktop/PG Dashboard/pg/src/components/fruitNinja.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n// Add to imports\nimport BackButton from './BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FRUITS = [{\n  type: 'apple',\n  color: '#ff0000',\n  points: 1,\n  size: 25,\n  emoji: '🍎'\n}, {\n  type: 'orange',\n  color: '#ffa500',\n  points: 2,\n  size: 25,\n  emoji: '🍊'\n}, {\n  type: 'banana',\n  color: '#ffff00',\n  points: 3,\n  size: 30,\n  emoji: '🍌'\n}, {\n  type: 'watermelon',\n  color: '#ff6b6b',\n  points: 5,\n  size: 35,\n  emoji: '🍉'\n}, {\n  type: 'kiwi',\n  color: '#90EE90',\n  points: 4,\n  size: 20,\n  emoji: '🥝'\n}, {\n  type: 'coconut',\n  color: '#8B4513',\n  points: 6,\n  size: 30,\n  emoji: '🥥'\n}, {\n  type: 'bomb',\n  color: '#000000',\n  points: -10,\n  size: 25,\n  emoji: '💣'\n}];\nconst FruitNinja = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('fruitNinjaHighScore')) || 0);\n  const [fruits, setFruits] = useState([]);\n  const [slicedFruits, setSlicedFruits] = useState([]);\n  const [mouseTrail, setMouseTrail] = useState([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let lastSpawnTime = 0;\n    const spawnInterval = 1500; // Increased spawn interval to 1.5 seconds\n\n    const spawnFruit = timestamp => {\n      if (timestamp - lastSpawnTime > spawnInterval) {\n        const fruit = {\n          ...FRUITS[Math.floor(Math.random() * FRUITS.length)],\n          x: Math.random() * (canvas.width - 80) + 40,\n          y: canvas.height + 30,\n          velocityY: -10 - Math.random() * 1,\n          // Significantly reduced from -8 to -5\n          velocityX: (Math.random() - 0.5) * 0.1,\n          // Significantly reduced from 2 to 1\n          rotation: Math.random() * Math.PI * 2,\n          scale: 1\n        };\n        setFruits(prev => [...prev, fruit]);\n        lastSpawnTime = timestamp;\n      }\n    };\n    const updateFruits = () => {\n      setFruits(prev => prev.map(fruit => ({\n        ...fruit,\n        x: fruit.x + fruit.velocityX,\n        y: fruit.y + fruit.velocityY,\n        velocityY: fruit.velocityY + 0.1,\n        // Reduced from 0.2 to 0.1\n        rotation: fruit.rotation + 0.005 // Reduced from 0.01 to 0.005\n      })).filter(fruit => fruit.y < canvas.height + 50));\n    };\n    const drawFruit = (ctx, fruit) => {\n      ctx.save();\n      ctx.translate(fruit.x, fruit.y);\n      ctx.rotate(fruit.rotation);\n      ctx.scale(fruit.scale, fruit.scale);\n\n      // Draw the emoji\n      ctx.font = `${fruit.size * 2}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(fruit.emoji, 0, 0);\n      ctx.restore();\n    };\n    const drawSlicedFruit = (ctx, slice) => {\n      ctx.save();\n      ctx.translate(slice.x, slice.y);\n      ctx.rotate(slice.rotation);\n      ctx.scale(slice.scale, slice.scale);\n\n      // Draw the sliced emoji (same emoji but smaller)\n      ctx.font = `${slice.size * 1.5}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(slice.emoji, 0, 0);\n      ctx.restore();\n    };\n    const drawMouseTrail = ctx => {\n      if (mouseTrail.length < 2) return;\n      ctx.beginPath();\n      ctx.moveTo(mouseTrail[0].x, mouseTrail[0].y);\n\n      // Create smooth curve through points\n      for (let i = 1; i < mouseTrail.length - 2; i++) {\n        const xc = (mouseTrail[i].x + mouseTrail[i + 1].x) / 2;\n        const yc = (mouseTrail[i].y + mouseTrail[i + 1].y) / 2;\n        ctx.quadraticCurveTo(mouseTrail[i].x, mouseTrail[i].y, xc, yc);\n      }\n\n      // Gradient for trail\n      const gradient = ctx.createLinearGradient(mouseTrail[0].x, mouseTrail[0].y, mouseTrail[mouseTrail.length - 1].x, mouseTrail[mouseTrail.length - 1].y);\n      gradient.addColorStop(0, 'rgba(135, 206, 235, 0)');\n      gradient.addColorStop(0.5, 'rgba(135, 206, 235, 0.8)');\n      gradient.addColorStop(1, 'rgba(135, 206, 235, 0)');\n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 5;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n    };\n    const animate = timestamp => {\n      if (!gameOver) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        spawnFruit(timestamp);\n        updateFruits();\n        fruits.forEach(fruit => drawFruit(ctx, fruit));\n        slicedFruits.forEach(slice => drawSlicedFruit(ctx, slice));\n        drawMouseTrail(ctx);\n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n    animate(0);\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [fruits, slicedFruits, mouseTrail, gameOver]);\n  const handleMouseMove = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setMouseTrail(prev => [...prev.slice(-15), {\n      x,\n      y\n    }]); // Increased trail length\n\n    // Check for collisions with fruits\n    setFruits(prev => {\n      const newFruits = [...prev];\n      const sliced = [];\n      for (let i = newFruits.length - 1; i >= 0; i--) {\n        const fruit = newFruits[i];\n        const dx = fruit.x - x;\n        const dy = fruit.y - y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < fruit.size * 1.5) {\n          // Increased hit area\n          sliced.push(fruit);\n          newFruits.splice(i, 1);\n          if (fruit.type === 'bomb') {\n            setGameOver(true);\n          } else {\n            setScore(prev => {\n              const newScore = prev + fruit.points;\n              if (newScore > highScore) {\n                setHighScore(newScore);\n                localStorage.setItem('fruitNinjaHighScore', newScore.toString());\n              }\n              return newScore;\n            });\n          }\n        }\n      }\n\n      // Create two sliced pieces for each fruit\n      setSlicedFruits(prev => [...prev, ...sliced.map(fruit => [{\n        ...fruit,\n        velocityY: fruit.velocityY - 2,\n        velocityX: fruit.velocityX - 2,\n        scale: 0.7\n      }, {\n        ...fruit,\n        velocityY: fruit.velocityY - 2,\n        velocityX: fruit.velocityX + 2,\n        scale: 0.7\n      }]).flat()]);\n      return newFruits;\n    });\n  };\n  const resetGame = () => {\n    setScore(0);\n    setGameOver(false);\n    setFruits([]);\n    setSlicedFruits([]);\n    setMouseTrail([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [\"// Add inside the main div of each game component\", /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fruit Ninja\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: '20px'\n        },\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"High Score: \", highScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 600,\n      style: {\n        border: '2px solid black',\n        backgroundColor: '#f0f0f0',\n        cursor: 'none'\n      },\n      onMouseMove: handleMouseMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(FruitNinja, \"jMkNr7N7zkwQrXXD41wAsjAWL7s=\");\n_c = FruitNinja;\nexport default FruitNinja;\nvar _c;\n$RefreshReg$(_c, \"FruitNinja\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BackButton","jsxDEV","_jsxDEV","FRUITS","type","color","points","size","emoji","FruitNinja","_s","canvasRef","score","setScore","gameOver","setGameOver","highScore","setHighScore","parseInt","localStorage","getItem","fruits","setFruits","slicedFruits","setSlicedFruits","mouseTrail","setMouseTrail","canvas","current","ctx","getContext","animationFrameId","lastSpawnTime","spawnInterval","spawnFruit","timestamp","fruit","Math","floor","random","length","x","width","y","height","velocityY","velocityX","rotation","PI","scale","prev","updateFruits","map","filter","drawFruit","save","translate","rotate","font","textAlign","textBaseline","fillText","restore","drawSlicedFruit","slice","drawMouseTrail","beginPath","moveTo","i","xc","yc","quadraticCurveTo","gradient","createLinearGradient","addColorStop","strokeStyle","lineWidth","lineCap","stroke","animate","clearRect","forEach","requestAnimationFrame","cancelAnimationFrame","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","newFruits","sliced","dx","dy","distance","sqrt","push","splice","newScore","setItem","toString","flat","resetGame","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","marginRight","ref","border","backgroundColor","cursor","onMouseMove","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/ashwin/Desktop/PG Dashboard/pg/src/components/fruitNinja.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n// Add to imports\nimport BackButton from './BackButton';\n\n\n\nconst FRUITS = [\n  { \n    type: 'apple', \n    color: '#ff0000', \n    points: 1,\n    size: 25,\n    emoji: '🍎'\n  },\n  { \n    type: 'orange', \n    color: '#ffa500', \n    points: 2,\n    size: 25,\n    emoji: '🍊'\n  },\n  { \n    type: 'banana', \n    color: '#ffff00', \n    points: 3,\n    size: 30,\n    emoji: '🍌'\n  },\n  { \n    type: 'watermelon', \n    color: '#ff6b6b', \n    points: 5,\n    size: 35,\n    emoji: '🍉'\n  },\n  { \n    type: 'kiwi', \n    color: '#90EE90', \n    points: 4,\n    size: 20,\n    emoji: '🥝'\n  },\n  { \n    type: 'coconut', \n    color: '#8B4513', \n    points: 6,\n    size: 30,\n    emoji: '🥥'\n  },\n  { \n    type: 'bomb', \n    color: '#000000', \n    points: -10,\n    size: 25,\n    emoji: '💣'\n  }\n];\n\nconst FruitNinja = () => {\n  const canvasRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [highScore, setHighScore] = useState(\n    parseInt(localStorage.getItem('fruitNinjaHighScore')) || 0\n  );\n\n  const [fruits, setFruits] = useState([]);\n  const [slicedFruits, setSlicedFruits] = useState([]);\n  const [mouseTrail, setMouseTrail] = useState([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let lastSpawnTime = 0;\n    const spawnInterval = 1500; // Increased spawn interval to 1.5 seconds\n\n    const spawnFruit = (timestamp) => {\n      if (timestamp - lastSpawnTime > spawnInterval) {\n        const fruit = {\n          ...FRUITS[Math.floor(Math.random() * FRUITS.length)],\n          x: Math.random() * (canvas.width - 80) + 40,\n          y: canvas.height + 30,\n          velocityY: -10 - Math.random() * 1, // Significantly reduced from -8 to -5\n          velocityX: (Math.random() - 0.5) * 0.1, // Significantly reduced from 2 to 1\n          rotation: Math.random() * Math.PI * 2,\n          scale: 1,\n        };\n        setFruits(prev => [...prev, fruit]);\n        lastSpawnTime = timestamp;\n      }\n    };\n\n    const updateFruits = () => {\n      setFruits(prev => prev.map(fruit => ({\n        ...fruit,\n        x: fruit.x + fruit.velocityX,\n        y: fruit.y + fruit.velocityY,\n        velocityY: fruit.velocityY + 0.1, // Reduced from 0.2 to 0.1\n        rotation: fruit.rotation + 0.005, // Reduced from 0.01 to 0.005\n      })).filter(fruit => fruit.y < canvas.height + 50));\n    };\n\n    const drawFruit = (ctx, fruit) => {\n      ctx.save();\n      ctx.translate(fruit.x, fruit.y);\n      ctx.rotate(fruit.rotation);\n      ctx.scale(fruit.scale, fruit.scale);\n      \n      // Draw the emoji\n      ctx.font = `${fruit.size * 2}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(fruit.emoji, 0, 0);\n      \n      ctx.restore();\n    };\n\n    const drawSlicedFruit = (ctx, slice) => {\n      ctx.save();\n      ctx.translate(slice.x, slice.y);\n      ctx.rotate(slice.rotation);\n      ctx.scale(slice.scale, slice.scale);\n      \n      // Draw the sliced emoji (same emoji but smaller)\n      ctx.font = `${slice.size * 1.5}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(slice.emoji, 0, 0);\n      \n      ctx.restore();\n    };\n\n    const drawMouseTrail = (ctx) => {\n      if (mouseTrail.length < 2) return;\n      \n      ctx.beginPath();\n      ctx.moveTo(mouseTrail[0].x, mouseTrail[0].y);\n      \n      // Create smooth curve through points\n      for (let i = 1; i < mouseTrail.length - 2; i++) {\n        const xc = (mouseTrail[i].x + mouseTrail[i + 1].x) / 2;\n        const yc = (mouseTrail[i].y + mouseTrail[i + 1].y) / 2;\n        ctx.quadraticCurveTo(mouseTrail[i].x, mouseTrail[i].y, xc, yc);\n      }\n      \n      // Gradient for trail\n      const gradient = ctx.createLinearGradient(\n        mouseTrail[0].x, mouseTrail[0].y,\n        mouseTrail[mouseTrail.length - 1].x, mouseTrail[mouseTrail.length - 1].y\n      );\n      gradient.addColorStop(0, 'rgba(135, 206, 235, 0)');\n      gradient.addColorStop(0.5, 'rgba(135, 206, 235, 0.8)');\n      gradient.addColorStop(1, 'rgba(135, 206, 235, 0)');\n      \n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 5;\n      ctx.lineCap = 'round';\n      ctx.stroke();\n    };\n\n    const animate = (timestamp) => {\n      if (!gameOver) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n        spawnFruit(timestamp);\n        updateFruits();\n        \n        fruits.forEach(fruit => drawFruit(ctx, fruit));\n        slicedFruits.forEach(slice => drawSlicedFruit(ctx, slice));\n        drawMouseTrail(ctx);\n        \n        animationFrameId = requestAnimationFrame(animate);\n      }\n    };\n\n    animate(0);\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [fruits, slicedFruits, mouseTrail, gameOver]);\n\n  const handleMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    setMouseTrail(prev => [...prev.slice(-15), { x, y }]); // Increased trail length\n\n    // Check for collisions with fruits\n    setFruits(prev => {\n      const newFruits = [...prev];\n      const sliced = [];\n      \n      for (let i = newFruits.length - 1; i >= 0; i--) {\n        const fruit = newFruits[i];\n        const dx = fruit.x - x;\n        const dy = fruit.y - y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < fruit.size * 1.5) { // Increased hit area\n          sliced.push(fruit);\n          newFruits.splice(i, 1);\n\n          if (fruit.type === 'bomb') {\n            setGameOver(true);\n          } else {\n            setScore(prev => {\n              const newScore = prev + fruit.points;\n              if (newScore > highScore) {\n                setHighScore(newScore);\n                localStorage.setItem('fruitNinjaHighScore', newScore.toString());\n              }\n              return newScore;\n            });\n          }\n        }\n      }\n\n      // Create two sliced pieces for each fruit\n      setSlicedFruits(prev => [...prev, \n        ...sliced.map(fruit => ([\n          {\n            ...fruit,\n            velocityY: fruit.velocityY - 2,\n            velocityX: fruit.velocityX - 2,\n            scale: 0.7,\n          },\n          {\n            ...fruit,\n            velocityY: fruit.velocityY - 2,\n            velocityX: fruit.velocityX + 2,\n            scale: 0.7,\n          }\n        ])).flat()\n      ]);\n\n      return newFruits;\n    });\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setGameOver(false);\n    setFruits([]);\n    setSlicedFruits([]);\n    setMouseTrail([]);\n  };\n\n  return (\n    <div style={{ textAlign: 'center', padding: '20px' }}>\n        // Add inside the main div of each game component\n        <BackButton />\n      <h2>Fruit Ninja</h2>\n      <div style={{ marginBottom: '10px' }}>\n        <span style={{ marginRight: '20px' }}>Score: {score}</span>\n        <span>High Score: {highScore}</span>\n      </div>\n      <canvas\n        ref={canvasRef}\n        width={800}\n        height={600}\n        style={{ \n          border: '2px solid black',\n          backgroundColor: '#f0f0f0',\n          cursor: 'none'\n        }}\n        onMouseMove={handleMouseMove}\n      />\n      {gameOver && (\n        <div style={{ marginTop: '20px' }}>\n          <p>Game Over!</p>\n          <button onClick={resetGame}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FruitNinja; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}